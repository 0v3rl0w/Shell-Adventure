%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - AdventureLang
scope: source.adv
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.example-c
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: ';'
      scope: punctuation.definition.comment.example-c
      push: line_comment

    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(?i)WAIT\b'
      scope: keyword.control.adv

    # Numbers
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.adv

    - match: '\b(?i)EXIT\b'
      scope: keyword.function.adv

    - match: '\b(?i)RUN\b'
      scope: keyword.function.adv

    - match: '\b(?i)SAY\b'
      scope: keyword.function.adv

    - match: '\b(?i)OBJECTIF\b'
      scope: keyword.function.adv

    - match: '\b(?i)CALL\b'
      scope: keyword.function.adv

    - match: '\b(?i)FUN\b'
      scope: keyword.function.adv

    - match: '\b(?i)END\b'
      scope: keyword.function.adv

    - match: '\b(?i)THEN\b'
      scope: keyword.control.conditional

    - match: '\b(?i)FILE\b'
      scope: support.constant

    - match: '\b(?i)DIR\b'
      scope: support.constant

    - match: '\b:\b'
      scope: punctuation.separator

    - match: '\b(?i)EXEC\b'
      scope: keyword.function.adv 

    - match: '\b(?i)END\b'
      scope: keyword.function.adv


  double_quoted_string:
    - meta_scope: string.quoted.double.example-c
    - match: '\\.'
      scope: constant.character.escape.example-c
    - match: '"'
      scope: punctuation.definition.string.end.example-c
      pop: true

  line_comment:
    - meta_scope: comment.line.example-c
    - match: $
      pop: true
